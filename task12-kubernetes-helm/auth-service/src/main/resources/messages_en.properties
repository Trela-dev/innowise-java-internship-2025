# =======================
# Repository errors
# =======================
error.no.such.book=No book found with the given ID
error.genre.notfound=Genre not found.



# =======================
# UserService errors
# =======================
user.role.default.missing=Default role not found.
user.username.duplicate=Username is already in use.
user.email.duplicate= Email is already in use.
# =======================
# BookService labels
# =======================
book=Book


# =======================
# AuthController
# =======================
auth.register.success=User registered successfully.

# =======================
# JWTAuthenticationFailureHandler
# =======================
auth.jwt.failure=JWT Authentication failed.

# =======================
# JWTAuthenticationSuccessHandler
# =======================
auth.jwt.success=User authenticated successfully.

# =======================
# JWTAuthenticationProvider
# =======================
auth.jwt.invalid=Invalid JWT token.

# =======================
# JWTFilter
# =======================
auth.jwt.header.invalid=Invalid JWT header.

# =======================
# CustomUserDetailsService
# =======================
auth.user.notfound=User not found with username: {0}

# =======================
# JWTCustomUsernamePasswordAuthenticationFilter
# =======================
auth.login.parse.error=Error parsing login request
auth.login.success.token=JWT token generated successfully! You can find it in the 'Authorization' header.

# =======================
# Validation messages
# =======================
email.is.blank=Email cannot be blank.
email.not.valid=Email is not valid.
user.username.empty=Username cannot be empty.
user.password.too.short=Password must be at least 8 characters long.
user.password.notblank=Password cannot be blank.