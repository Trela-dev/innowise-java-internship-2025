# Docker Compose file for development environment with Consul, PostgreSQL, and MongoDB
#  USE docker compose -f docker-compose.dev.yaml up -d
services:
  consul:
    image: consul:1.15.4
    ports:
      - "8500:8500"
    command: "consul agent -dev -client=0.0.0.0"

  postgres:
    image: postgres:13
    container_name: book-auth-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=library_auth_db
    ports:
      - "5432:5432"
    volumes:
      - authdata:/var/lib/postgresql/data


  book-db:
    image: postgres:13
    container_name: book-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=library_book_db
    ports:
      - "5433:5432"
    volumes:
      - bookdata:/var/lib/postgresql/data

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - mongodb_data:/data/db

  broker:
    image: apache/kafka:3.9.1
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  redis:
    image: redis:8.2.1
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis_data:/data


volumes:
  authdata:
  bookdata:
  mongodb_data:
  redis_data:
